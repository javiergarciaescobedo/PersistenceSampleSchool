package es.javiergarciaescobedo.persistencesampleschool;

import es.javiergarciaescobedo.persistencesampleschool.view.ClassGroupsTableModel;
import es.javiergarciaescobedo.persistencesampleschool.model.ClassGroups;
import es.javiergarciaescobedo.persistencesampleschool.model.ClassGroup;
import es.javiergarciaescobedo.persistencesampleschool.view.IntegerCellEditor;
import es.javiergarciaescobedo.persistencesampleschool.view.StringCellEditor;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

public class MainJFrame extends javax.swing.JFrame {

    private EntityManager entityManager;
    private ClassGroups classGroups;
    private ClassGroupsTableModel classGroupsTableModel;
            
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        // Center JFrame
        setLocationRelativeTo(null);
        
        // Connection with database using an entity manager
        entityManager = Persistence.createEntityManagerFactory("PersistenceSampleSchoolPU").createEntityManager();
        
        // Set configuration and data content for class groups jTable
        configJTableClassGroups();
        
        entityManager.getTransaction().begin(); 
    }
        
    private void configJTableClassGroups() {
        classGroups = new ClassGroups(entityManager);
        
        // Load data from database
        classGroups.loadFromDatabase();
        
        // Model for JTable, assigning classgroups content
        classGroupsTableModel = new ClassGroupsTableModel(classGroups);
        jTableClassGroups.setModel(classGroupsTableModel);  
        
        classGroupsTableModel.addTableModelListener(jTableClassGroups);

        // Cell editor for class group name
        JTextField jTextFieldClassGroupName = new JTextField();
        jTextFieldClassGroupName.setColumns(Values.CLASS_GROUP_NAME_LENGTH);
        jTableClassGroups.getColumnModel().getColumn(0).setCellEditor(
                new StringCellEditor(jTextFieldClassGroupName));  
        
        // Cell editor for class group capacity
        jTableClassGroups.getColumnModel().getColumn(1).setCellEditor(
                new IntegerCellEditor(new JTextField()));  
        
        // Allow only one row selected
        jTableClassGroups.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClassGroups = new javax.swing.JTable();
        jButtonNewClassGroup = new javax.swing.JButton();
        jButtonDeleteClassGroup = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jButtonCommit = new javax.swing.JButton();
        jButtonRollback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 515, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Estudiantes", jPanel1);

        jTableClassGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableClassGroups);

        jButtonNewClassGroup.setText("+");
        jButtonNewClassGroup.setFocusable(false);
        jButtonNewClassGroup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNewClassGroup.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNewClassGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewClassGroupActionPerformed(evt);
            }
        });

        jButtonDeleteClassGroup.setText("-");
        jButtonDeleteClassGroup.setFocusable(false);
        jButtonDeleteClassGroup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDeleteClassGroup.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDeleteClassGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteClassGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNewClassGroup, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonDeleteClassGroup, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonNewClassGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteClassGroup)
                        .addGap(0, 212, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Grupos", jPanel2);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jButtonCommit.setText("Guardar");
        jButtonCommit.setFocusable(false);
        jButtonCommit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCommit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCommitActionPerformed(evt);
            }
        });
        jToolBar2.add(jButtonCommit);

        jButtonRollback.setText("Cancelar");
        jButtonRollback.setFocusable(false);
        jButtonRollback.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRollback.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonRollback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRollbackActionPerformed(evt);
            }
        });
        jToolBar2.add(jButtonRollback);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // Only allow closing if data changes has been saved or canceled
        if(classGroupsTableModel.isDataChanged()) {
            JOptionPane.showMessageDialog(this, "Hay cambios sin guardar");
        } else {
            // Close connection
            entityManager.close();
            setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButtonNewClassGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewClassGroupActionPerformed
        // Create a new empty class group object
        ClassGroup classGroup = classGroups.createClassGroup();
        
        // Prepare object for persist
        entityManager.persist(classGroup);
        
        // Add a row in last position of JTable
        int newRowIndex = classGroups.getClassGroupList().size()-1;
        classGroupsTableModel.fireTableRowsInserted(newRowIndex, newRowIndex);
        jTableClassGroups.setRowSelectionInterval(newRowIndex, newRowIndex);
    }//GEN-LAST:event_jButtonNewClassGroupActionPerformed

    private void jButtonCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCommitActionPerformed
        // Commit current transaction and start a new transaction
        entityManager.getTransaction().commit();
        entityManager.getTransaction().begin();
        
        classGroupsTableModel.setDataChanged(false);
    }//GEN-LAST:event_jButtonCommitActionPerformed

    private void jButtonRollbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRollbackActionPerformed
        // Rollback current transaction and start a new transaction
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        
        // Refresh JTable content
        classGroups.loadFromDatabase();
        classGroupsTableModel.fireTableDataChanged();
        
        classGroupsTableModel.setDataChanged(false);
    }//GEN-LAST:event_jButtonRollbackActionPerformed

    private void jButtonDeleteClassGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteClassGroupActionPerformed
        // Get index of selected row
        int rowSelectedIndex = jTableClassGroups.getSelectedRow();
        if(rowSelectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar el grupo a suprimir");
        } else {
            // Convert row index in table view to index row in list.
            //  Order in table could be different to order in list
            int selectedClassGroupIndex = jTableClassGroups.convertRowIndexToModel(rowSelectedIndex);
            // Get class group from this index position in list
            ClassGroup classGroup = classGroups.getClassGroupList().get(selectedClassGroupIndex);
            // Prepare class group to be removed from database
            entityManager.remove(classGroup);
            // Remove class group from list
            classGroups.getClassGroupList().remove(classGroup);
            // Advise to jtable that a row has been removed from list
            classGroupsTableModel.fireTableRowsDeleted(rowSelectedIndex, rowSelectedIndex);
        }
    }//GEN-LAST:event_jButtonDeleteClassGroupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCommit;
    private javax.swing.JButton jButtonDeleteClassGroup;
    private javax.swing.JButton jButtonNewClassGroup;
    private javax.swing.JButton jButtonRollback;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableClassGroups;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}
